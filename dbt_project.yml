
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'test_assignment'
version: '1.0.0'

# This setting configures which "profile" dbt uses for this project.
profile: 'test_assignment'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
source-paths: ["models"]
analysis-paths: ["analysis"] 
test-paths: ["tests"]
data-paths: ["data"]
macro-paths: ["macros"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
    - "target"
    - "dbt_modules"

config-version: 2
# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.

seeds:
  test_assignment:
    +enabled: true
    +schema: data



models:
  test_assignment:
    staging:
      schema: staging
      materialized: table
      
    aggregations:
      schema: aggregations
      materialized: table
    

# on-run-end: 'alter table if exists development_data.policies drop  column if exists lead_id_2;'



